doctype html
html(lang='en', ng-app='frodocms')
  head
    title Frodocms
    base(href='/')
    script(src='lib/angular/angular.min.js')
    script(src='lib/angular-route/angular-route.min.js')
    script(src='lib/angular-ui-router/release/angular-ui-router.min.js')
    script(src='lib/angular-animate/angular-animate.min.js')
    link(rel='stylesheet', href='lib/font-awesome/css/font-awesome.min.css', type='text/css', media='screen')
    link(rel='stylesheet', href='https://fonts.googleapis.com/icon?family=Material+Icons')
    link(href='css/main.css', rel='stylesheet')
    link(href='lib/robotodraft/robotodraft.css', rel='stylesheet')
    script(src='js/main.js')
  body(ng-controller='MainController as main')
    header
      .frodo-navbar
        .frodo-navbar-header
          a(href='/')
            | Frodocms
            i.fas.fa-pen
        .frodo-navbar-menu(ng-show='false')
    main(style='min-height:100%;')
      header#home.hero-area(ng-show='!showSection', style='min-height:850px;')
        .content-wrap
          .container
            .contents
              h1.wow.fadeInRight(data-wow-duration='1000ms', data-wow-delay='300ms') Frodocms - A notebook for all your scribbles and sketches.
              p.wow.fadeInRight(data-wow-duration='1000ms', data-wow-delay='400ms') Write and Save Notes
              a.btn.btn-lg.btn-material-teal.wow.fadeInUp(ng-href='/login' data-wow-duration='1000ms' data-wow-delay='400ms' ng-if='!currentUser') Sign In
              a.btn.btn-lg.btn-border.wow.fadeInUp(ng-href='/signup' data-wow-duration='1000ms' data-wow-delay='500ms' ng-if='!currentUser') Sign Up
            .cta
              p Login / Register:
                .tab
                  button.frodo-cancel-button.tablinks(onclick="openCta(event, 'Login')") Login
                  button.frodo-cancel-button.tablinks(onclick="openCta(event, 'Register')") Register
                #Login.tabcontent
                  .container
                    .jumbotron
                      h2 Login
                    section
                      form.form-sigin(method='post', ng-submit='login.doLogin()')
                        .alert.alert-danger(ng-if='login.error')
                          a.close(href='#', data-dismiss='alert', aria-label='close') ×
                          strong Error!
                          |  {{ login.error }}
                        .row
                          .input-field.col.s12
                            input#user_name.validate(type='text', name='username', ng-model='login.loginData.username')
                            label(for='user_name') Username
                        .row
                          .input-field.col.s12
                            input#password.validate(type='password', name='password', ng-model='login.loginData.password')
                            label(for='password') Password
                        button.btn.btn-lg.btn-material-teal(type='submit') Login
                      p
                        a(onclick="openCta(event, 'Register')") Not Registered? Sign up here.
                #Register.tabcontent
                  .container
                    .jumbotron
                      h2 Sign Up
                    section(ng-controller='SignupController as signup')
                      form.form-sigin(method='post', ng-submit='signup.doSignup()')
                        .alert.alert-info(ng-if='!signup.error')
                          a.close(href='#', data-dismiss='alert', aria-label='close') ×
                          strong Info!
                          |  Please fill every entry to signup!
                        .alert.alert-danger(ng-if='signup.error')
                          a.close(href='#', data-dismiss='alert', aria-label='close') ×
                          strong Error!
                          | {{ signup.error }}
                        br
                        .row  
                          .input-field.col.s6
                            input#first_name.validate(type='text', ng-model='signup.signupData.firstname')
                            label(for='first_name') First Name
                          .input-field.col.s6
                            input#last_name.validate(type='text', ng-model='signup.signupData.lastname')
                            label(for='last_name') Last Name
                        .row
                          .input-field.col.s12
                            input#password.validate(type='password', ng-model='signup.signupData.password')
                            label(for='password') Password
                        .row
                          .input-field.col.s12
                            input#user_name.validate(type='text', name='username', ng-model='signup.signupData.username')
                            label(for='user_name') Username
                        .row
                          .input-field.col.s12
                            input#email.validate(type='text', name='email', ng-model='signup.signupData.email')
                            label(for='email') Email
                        p
                          input#test1(name='role', type='radio', value='1', ng-model='signup.signupData.role')
                          label(for='test1') Administrator
                        p
                          input#test2(name='role', type='radio', value='2', checked='true', ng-model='signup.signupData.role')
                          label(for='test2') User
                        button.btn.btn-lg.btn-material-teal(type='submit') Signup
                      p
                        a(onclick="openCta(event, 'Login')") Already Registered? Login here.

    script(src='js/main.js')
    script.
      function openCta(evt, ctaType) {
      var i, tabcontent, tablinks;
      tabcontent = document.getElementsByClassName("tabcontent");
      for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
      }
      tablinks = document.getElementsByClassName("tablinks");
      for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
      }
      document.getElementById(ctaType).style.display = "block";
      evt.currentTarget.className += " active";
      }
